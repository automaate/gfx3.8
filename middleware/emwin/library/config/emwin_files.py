# coding: utf-8
##############################################################################
# Copyright (C) 2018 Microchip Technology Inc. and its subsidiaries.
#
# Subject to your compliance with these terms, you may use Microchip software
# and any derivatives exclusively with Microchip products. It is your
# responsibility to comply with third party license terms applicable to your
# use of third party software (including open source software) that may
# accompany Microchip software.
#
# THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES, WHETHER
# EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE, INCLUDING ANY IMPLIED
# WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY, AND FITNESS FOR A
# PARTICULAR PURPOSE.
#
# IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE,
# INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND
# WHATSOEVER RELATED TO THE SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS
# BEEN ADVISED OF THE POSSIBILITY OR THE DAMAGES ARE FORESEEABLE. TO THE
# FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN
# ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
# THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
##############################################################################

# Add Configuration file
EMWIN_CONFIG_H = component.createFileSymbol("EMWIN_CONFIG_H", None)
EMWIN_CONFIG_H.setSourcePath("templates/emwin_config.h.ftl")
EMWIN_CONFIG_H.setDestPath("gfx/emwin")
EMWIN_CONFIG_H.setOutputName("emwin_config.h")
EMWIN_CONFIG_H.setProjectPath(projectPath)
EMWIN_CONFIG_H.setType("HEADER")
EMWIN_CONFIG_H.setMarkup(True)

# Add Library
EMWIN_A = component.createLibrarySymbol("EMWIN_A", None)
EMWIN_A.setDestPath("gfx/emwin/lib")
if("EF" in Variables.get("__PROCESSOR")):
	EMWIN_A.setSourcePath("src/gfx/emwin/lib/emWin.a")
	EMWIN_A.setOutputName("emWin.a")
elif("DA" in Variables.get("__PROCESSOR")):
	EMWIN_A.setSourcePath("src/gfx/emwin/lib/emwin_nofp.a")
	EMWIN_A.setOutputName("emwin_nofp.a")
elif("PIC32MX" in Variables.get("__PROCESSOR")):
	EMWIN_A.setSourcePath("src/gfx/emwin/lib/emwin_mx.a")
	EMWIN_A.setOutputName("emwin_mx.a")
else:
         print("processor: " + str(Variables.get("__PROCESSOR")) + " is not supported")

GUI_X_Ex_C = component.createFileSymbol("GUI_X_Ex_C", None)
GUI_X_Ex_C.setSourcePath("src/gfx/emwin/config/GUI_X_Ex.c.ftl")
GUI_X_Ex_C.setDestPath("gfx/emwin/config")
GUI_X_Ex_C.setProjectPath(projectPath + "/")
GUI_X_Ex_C.setOutputName("gui_x_ex.c")
GUI_X_Ex_C.setType("SOURCE")
GUI_X_Ex_C.setMarkup(True)

LCDCONF_H = component.createFileSymbol("LCDCONF_H", None)
LCDCONF_H.setSourcePath("src/gfx/emwin/config/LCDConf.h.ftl")
LCDCONF_H.setDestPath("gfx/emwin/config")
LCDCONF_H.setProjectPath(projectPath + "/")
LCDCONF_H.setOutputName("lcdconf.h")
LCDCONF_H.setType("HEADER")
LCDCONF_H.setMarkup(True)

LCDCONF_C = component.createFileSymbol("LCDCONF_C", None)
LCDCONF_C.setSourcePath("src/gfx/emwin/config/LCDConf.c.ftl")
LCDCONF_C.setDestPath("gfx/emwin/config")
LCDCONF_C.setProjectPath(projectPath + "/")
LCDCONF_C.setOutputName("lcdconf.c")
LCDCONF_C.setType("SOURCE")
LCDCONF_C.setMarkup(True)

GUICONF_H = component.createFileSymbol("GUICONF_H", None)
GUICONF_H.setSourcePath("src/gfx/emwin/config/GUIConf.h.ftl")
GUICONF_H.setDestPath("gfx/emwin/config")
GUICONF_H.setProjectPath(projectPath + "/")
GUICONF_H.setOutputName("guiconf.h")
GUICONF_H.setType("HEADER")
GUICONF_H.setMarkup(True)

GUICONF_C = component.createFileSymbol("GUICONF_C", None)
GUICONF_C.setSourcePath("src/gfx/emwin/config/GUIConf.c.ftl")
GUICONF_C.setDestPath("gfx/emwin/config")
GUICONF_C.setProjectPath(projectPath + "/")
GUICONF_C.setOutputName("guiconf.c")
GUICONF_C.setType("SOURCE")
GUICONF_C.setMarkup(True)

GUISTATIC_H = component.createFileSymbol("GUISTATIC_H", None)
GUISTATIC_H.setSourcePath("src/gfx/emwin/gui/emwin_gui_static.h")
GUISTATIC_H.setDestPath("gfx/emwin/gui")
GUISTATIC_H.setProjectPath(projectPath + "/")
GUISTATIC_H.setOutputName("emwin_gui_static.h")
GUISTATIC_H.setType("HEADER")

GUISTATIC_C = component.createFileSymbol("GUISTATIC_C", None)
GUISTATIC_C.setSourcePath("src/gfx/emwin/gui/src/emwin_gui_static.c")
GUISTATIC_C.setDestPath("gfx/emwin/gui")
GUISTATIC_C.setProjectPath(projectPath + "/")
GUISTATIC_C.setOutputName("emwin_gui_static.c")
GUISTATIC_C.setType("SOURCE")

GUISTATICLOCAL_H = component.createFileSymbol("GUISTATICLOCAL_H", None)
GUISTATICLOCAL_H.setSourcePath("src/gfx/emwin/gui/src/emwin_gui_static_local.h")
GUISTATICLOCAL_H.setDestPath("gfx/emwin/gui")
GUISTATICLOCAL_H.setProjectPath(projectPath + "/")
GUISTATICLOCAL_H.setOutputName("emwin_gui_static_local.h")
GUISTATICLOCAL_H.setType("HEADER")

TOUCHSTATIC_H = component.createFileSymbol("TOUCHSTATIC_H", None)
TOUCHSTATIC_H.setSourcePath("src/gfx/emwin/touch/emwin_touch_static.h")
TOUCHSTATIC_H.setDestPath("gfx/emwin/touch")
TOUCHSTATIC_H.setProjectPath(projectPath + "/")
TOUCHSTATIC_H.setOutputName("emwin_touch_static.h")
TOUCHSTATIC_H.setType("HEADER")

TOUCHSTATIC_C = component.createFileSymbol("TOUCHSTATIC_C", None)
TOUCHSTATIC_C.setSourcePath("src/gfx/emwin/touch/src/emwin_touch_static.c")
TOUCHSTATIC_C.setDestPath("gfx/emwin/touch")
TOUCHSTATIC_C.setProjectPath(projectPath + "/")
TOUCHSTATIC_C.setOutputName("emwin_touch_static.c")
TOUCHSTATIC_C.setType("SOURCE")

TOUCHSTATICLOCAL_H = component.createFileSymbol("TOUCHSTATICLOCAL_H", None)
TOUCHSTATICLOCAL_H.setSourcePath("src/gfx/emwin/touch/src/emwin_touch_static_local.h")
TOUCHSTATICLOCAL_H.setDestPath("gfx/emwin/touch")
TOUCHSTATICLOCAL_H.setProjectPath(projectPath + "/")
TOUCHSTATICLOCAL_H.setOutputName("emwin_touch_static_local.h")
TOUCHSTATICLOCAL_H.setType("HEADER")

BUTTON_H = component.createFileSymbol("BUTTON_H", None)
BUTTON_H.setSourcePath("src/gfx/emwin/inc/BUTTON.h")
BUTTON_H.setDestPath("gfx/emwin/")
BUTTON_H.setProjectPath(projectPath + "/")
BUTTON_H.setOutputName("button.h")
BUTTON_H.setType("HEADER")

BUTTON_P_H = component.createFileSymbol("BUTTON_P_H", None)
BUTTON_P_H.setSourcePath("src/gfx/emwin/inc/BUTTON_Private.h")
BUTTON_P_H.setDestPath("gfx/emwin/")
BUTTON_P_H.setProjectPath(projectPath + "/")
BUTTON_P_H.setOutputName("button_private.h")
BUTTON_P_H.setType("HEADER")

CALENDAR_H = component.createFileSymbol("CALENDAR_H", None)
CALENDAR_H.setSourcePath("src/gfx/emwin/inc/CALENDAR.h")
CALENDAR_H.setDestPath("gfx/emwin/")
CALENDAR_H.setProjectPath(projectPath + "/")
CALENDAR_H.setOutputName("calendar.h")
CALENDAR_H.setType("HEADER")

CHECKBOX_H = component.createFileSymbol("CHECKBOX_H", None)
CHECKBOX_H.setSourcePath("src/gfx/emwin/inc/CHECKBOX.h")
CHECKBOX_H.setDestPath("gfx/emwin/")
CHECKBOX_H.setProjectPath(projectPath + "/")
CHECKBOX_H.setOutputName("checkbox.h")
CHECKBOX_H.setType("HEADER")

CHECKBOX_P_H = component.createFileSymbol("CHECKBOX_P_H", None)
CHECKBOX_P_H.setSourcePath("src/gfx/emwin/inc/CHECKBOX_Private.h")
CHECKBOX_P_H.setDestPath("gfx/emwin/")
CHECKBOX_P_H.setProjectPath(projectPath + "/")
CHECKBOX_P_H.setOutputName("checkbox_private.h")
CHECKBOX_P_H.setType("HEADER")

CHOOSECOLOR_H = component.createFileSymbol("CHOOSECOLOR_H", None)
CHOOSECOLOR_H.setSourcePath("src/gfx/emwin/inc/CHOOSECOLOR.h")
CHOOSECOLOR_H.setDestPath("gfx/emwin/")
CHOOSECOLOR_H.setProjectPath(projectPath + "/")
CHOOSECOLOR_H.setOutputName("choosecolor.h")
CHOOSECOLOR_H.setType("HEADER")

CHOOSEFILE_H = component.createFileSymbol("CHOOSEFILE_H", None)
CHOOSEFILE_H.setSourcePath("src/gfx/emwin/inc/CHOOSEFILE.h")
CHOOSEFILE_H.setDestPath("gfx/emwin/")
CHOOSEFILE_H.setProjectPath(projectPath + "/")
CHOOSEFILE_H.setOutputName("choosefile.h")
CHOOSEFILE_H.setType("HEADER")

DIALOG_H = component.createFileSymbol("DIALOG_H", None)
DIALOG_H.setSourcePath("src/gfx/emwin/inc/DIALOG.h")
DIALOG_H.setDestPath("gfx/emwin/")
DIALOG_H.setProjectPath(projectPath + "/")
DIALOG_H.setOutputName("dialog.h")
DIALOG_H.setType("HEADER")

DIALOG_I_H = component.createFileSymbol("DIALOG_I_H", None)
DIALOG_I_H.setSourcePath("src/gfx/emwin/inc/DIALOG_Intern.h")
DIALOG_I_H.setDestPath("gfx/emwin/")
DIALOG_I_H.setProjectPath(projectPath + "/")
DIALOG_I_H.setOutputName("dialog_intern.h")
DIALOG_I_H.setType("HEADER")

DROPDOWN_H = component.createFileSymbol("DROPDOWN_H", None)
DROPDOWN_H.setSourcePath("src/gfx/emwin/inc/DROPDOWN.h")
DROPDOWN_H.setDestPath("gfx/emwin/")
DROPDOWN_H.setProjectPath(projectPath + "/")
DROPDOWN_H.setOutputName("dropdown.h")
DROPDOWN_H.setType("HEADER")

DROPDOWN_P_H = component.createFileSymbol("DROPDOWN_P_H", None)
DROPDOWN_P_H.setSourcePath("src/gfx/emwin/inc/DROPDOWN_Private.h")
DROPDOWN_P_H.setDestPath("gfx/emwin/")
DROPDOWN_P_H.setProjectPath(projectPath + "/")
DROPDOWN_P_H.setOutputName("dropdown_private.h")
DROPDOWN_P_H.setType("HEADER")

EDIT_H = component.createFileSymbol("EDIT_H", None)
EDIT_H.setSourcePath("src/gfx/emwin/inc/EDIT.h")
EDIT_H.setDestPath("gfx/emwin/")
EDIT_H.setProjectPath(projectPath + "/")
EDIT_H.setOutputName("edit.h")
EDIT_H.setType("HEADER")

EDIT_P_H = component.createFileSymbol("EDIT_P_H", None)
EDIT_P_H.setSourcePath("src/gfx/emwin/inc/EDIT_Private.h")
EDIT_P_H.setDestPath("gfx/emwin/")
EDIT_P_H.setProjectPath(projectPath + "/")
EDIT_P_H.setOutputName("edit_private.h")
EDIT_P_H.setType("HEADER")

FRAMEWIN_H = component.createFileSymbol("FRAMEWIN_H", None)
FRAMEWIN_H.setSourcePath("src/gfx/emwin/inc/FRAMEWIN.h")
FRAMEWIN_H.setDestPath("gfx/emwin/")
FRAMEWIN_H.setProjectPath(projectPath + "/")
FRAMEWIN_H.setOutputName("framewin.h")
FRAMEWIN_H.setType("HEADER")

FRAMEWIN_P_H = component.createFileSymbol("FRAMEWIN_P_H", None)
FRAMEWIN_P_H.setSourcePath("src/gfx/emwin/inc/FRAMEWIN_Private.h")
FRAMEWIN_P_H.setDestPath("gfx/emwin/")
FRAMEWIN_P_H.setProjectPath(projectPath + "/")
FRAMEWIN_P_H.setOutputName("framewin_private.h")
FRAMEWIN_P_H.setType("HEADER")

GLOBAL_H = component.createFileSymbol("GLOBAL_H", None)
GLOBAL_H.setSourcePath("src/gfx/emwin/inc/GLOBAL.h")
GLOBAL_H.setDestPath("gfx/emwin/")
GLOBAL_H.setProjectPath(projectPath + "/")
GLOBAL_H.setOutputName("global.h")
GLOBAL_H.setType("HEADER")

GRAPH_H = component.createFileSymbol("GRAPH_H", None)
GRAPH_H.setSourcePath("src/gfx/emwin/inc/GRAPH.h")
GRAPH_H.setDestPath("gfx/emwin/")
GRAPH_H.setProjectPath(projectPath + "/")
GRAPH_H.setOutputName("graph.h")
GRAPH_H.setType("HEADER")

GRAPH_P_H = component.createFileSymbol("GRAPH_P_H", None)
GRAPH_P_H.setSourcePath("src/gfx/emwin/inc/GRAPH_Private.h")
GRAPH_P_H.setDestPath("gfx/emwin/")
GRAPH_P_H.setProjectPath(projectPath + "/")
GRAPH_P_H.setOutputName("graph_private.h")
GRAPH_P_H.setType("HEADER")

GUI_H = component.createFileSymbol("GUI_H", None)
GUI_H.setSourcePath("src/gfx/emwin/inc/GUI.h")
GUI_H.setDestPath("gfx/emwin/")
GUI_H.setProjectPath(projectPath + "/")
GUI_H.setOutputName("gui.h")
GUI_H.setType("HEADER")

GUI_BIDI2_BRACKETS_800_H = component.createFileSymbol("GUI_BIDI2_BRACKETS_800_H", None)
GUI_BIDI2_BRACKETS_800_H.setSourcePath("src/gfx/emwin/inc/GUI__BiDi2_Brackets_800.h")
GUI_BIDI2_BRACKETS_800_H.setDestPath("gfx/emwin/")
GUI_BIDI2_BRACKETS_800_H.setProjectPath(projectPath + "/")
GUI_BIDI2_BRACKETS_800_H.setOutputName("gui_bidi2_brackets_800.h")
GUI_BIDI2_BRACKETS_800_H.setType("HEADER")

GUI_BIDI2_TYPES_800_H = component.createFileSymbol("GUI_BIDI2_TYPES_800_H", None)
GUI_BIDI2_TYPES_800_H.setSourcePath("src/gfx/emwin/inc/GUI__BiDi2_Types_800.h")
GUI_BIDI2_TYPES_800_H.setDestPath("gfx/emwin/")
GUI_BIDI2_TYPES_800_H.setProjectPath(projectPath + "/")
GUI_BIDI2_TYPES_800_H.setOutputName("gui_bidi2_types_800.h")
GUI_BIDI2_TYPES_800_H.setType("HEADER")

GUI_ARRAY_H = component.createFileSymbol("GUI_ARRAY_H", None)
GUI_ARRAY_H.setSourcePath("src/gfx/emwin/inc/GUI_ARRAY.h")
GUI_ARRAY_H.setDestPath("gfx/emwin/")
GUI_ARRAY_H.setProjectPath(projectPath + "/")
GUI_ARRAY_H.setOutputName("gui_array.h")
GUI_ARRAY_H.setType("HEADER")

GUI_ARRAY_P_H = component.createFileSymbol("GUI_ARRAY_P_H", None)
GUI_ARRAY_P_H.setSourcePath("src/gfx/emwin/inc/GUI_ARRAY_Private.h")
GUI_ARRAY_P_H.setDestPath("gfx/emwin/")
GUI_ARRAY_P_H.setProjectPath(projectPath + "/")
GUI_ARRAY_P_H.setOutputName("gui_array_private.h")
GUI_ARRAY_P_H.setType("HEADER")

GUI_BMP_P_H = component.createFileSymbol("GUI_BMP_P_H", None)
GUI_BMP_P_H.setSourcePath("src/gfx/emwin/inc/GUI_BMP_Private.h")
GUI_BMP_P_H.setDestPath("gfx/emwin/")
GUI_BMP_P_H.setProjectPath(projectPath + "/")
GUI_BMP_P_H.setOutputName("gui_bmp_private.h")
GUI_BMP_P_H.setType("HEADER")

GUI_CONFDEFAULTS_H = component.createFileSymbol("GUI_CONFDEFAULTS_H", None)
GUI_CONFDEFAULTS_H.setSourcePath("src/gfx/emwin/inc/GUI_CONFDEFAULTS.h")
GUI_CONFDEFAULTS_H.setDestPath("gfx/emwin/")
GUI_CONFDEFAULTS_H.setProjectPath(projectPath + "/")
GUI_CONFDEFAULTS_H.setOutputName("gui_confdefaults.h")
GUI_CONFDEFAULTS_H.setType("HEADER")

GUI_DEBUG_H = component.createFileSymbol("GUI_DEBUG_H", None)
GUI_DEBUG_H.setSourcePath("src/gfx/emwin/inc/GUI_DEBUG.h")
GUI_DEBUG_H.setDestPath("gfx/emwin/")
GUI_DEBUG_H.setProjectPath(projectPath + "/")
GUI_DEBUG_H.setOutputName("gui_debug.h")
GUI_DEBUG_H.setType("HEADER")

GUI_FONTINTERN_H = component.createFileSymbol("GUI_FONTINTERN_H", None)
GUI_FONTINTERN_H.setSourcePath("src/gfx/emwin/inc/GUI_FONTINTERN.h")
GUI_FONTINTERN_H.setDestPath("gfx/emwin/")
GUI_FONTINTERN_H.setProjectPath(projectPath + "/")
GUI_FONTINTERN_H.setOutputName("gui_fontintern.h")
GUI_FONTINTERN_H.setType("HEADER")

GUI_GCACHE_P_H = component.createFileSymbol("GUI_GCACHE_P_H", None)
GUI_GCACHE_P_H.setSourcePath("src/gfx/emwin/inc/GUI_GCACHE_Private.h")
GUI_GCACHE_P_H.setDestPath("gfx/emwin/")
GUI_GCACHE_P_H.setProjectPath(projectPath + "/")
GUI_GCACHE_P_H.setOutputName("gui_gcache_private.h")
GUI_GCACHE_P_H.setType("HEADER")

GUI_GIF_P_H = component.createFileSymbol("GUI_GIF_P_H", None)
GUI_GIF_P_H.setSourcePath("src/gfx/emwin/inc/GUI_GIF_Private.h")
GUI_GIF_P_H.setDestPath("gfx/emwin/")
GUI_GIF_P_H.setProjectPath(projectPath + "/")
GUI_GIF_P_H.setOutputName("gui_gif_private.h")
GUI_GIF_P_H.setType("HEADER")

GUI_HOOK_H = component.createFileSymbol("GUI_HOOK_H", None)
GUI_HOOK_H.setSourcePath("src/gfx/emwin/inc/GUI_HOOK.h")
GUI_HOOK_H.setDestPath("gfx/emwin/")
GUI_HOOK_H.setProjectPath(projectPath + "/")
GUI_HOOK_H.setOutputName("gui_hook.h")
GUI_HOOK_H.setType("HEADER")

GUI_JPEG_P_H = component.createFileSymbol("GUI_JPEG_P_H", None)
GUI_JPEG_P_H.setSourcePath("src/gfx/emwin/inc/GUI_JPEG_Private.h")
GUI_JPEG_P_H.setDestPath("gfx/emwin/")
GUI_JPEG_P_H.setProjectPath(projectPath + "/")
GUI_JPEG_P_H.setOutputName("gui_jpeg_private.h")
GUI_JPEG_P_H.setType("HEADER")

GUI_P_H = component.createFileSymbol("GUI_P_H", None)
GUI_P_H.setSourcePath("src/gfx/emwin/inc/GUI_Private.h")
GUI_P_H.setDestPath("gfx/emwin/")
GUI_P_H.setProjectPath(projectPath + "/")
GUI_P_H.setOutputName("gui_private.h")
GUI_P_H.setType("HEADER")

GUI_SETORIENTATION_H = component.createFileSymbol("GUI_SETORIENTATION_H", None)
GUI_SETORIENTATION_H.setSourcePath("src/gfx/emwin/inc/GUI_SetOrientation.h")
GUI_SETORIENTATION_H.setDestPath("gfx/emwin/")
GUI_SETORIENTATION_H.setProjectPath(projectPath + "/")
GUI_SETORIENTATION_H.setOutputName("gui_setorientation.h")
GUI_SETORIENTATION_H.setType("HEADER")

GUI_SETORIENTATION_CX_H = component.createFileSymbol("GUI_SETORIENTATION_CX_H", None)
GUI_SETORIENTATION_CX_H.setSourcePath("src/gfx/emwin/inc/GUI_SetOrientationCX.h")
GUI_SETORIENTATION_CX_H.setDestPath("gfx/emwin/")
GUI_SETORIENTATION_CX_H.setProjectPath(projectPath + "/")
GUI_SETORIENTATION_CX_H.setOutputName("gui_setorientation_cx.h")
GUI_SETORIENTATION_CX_H.setType("HEADER")

GUI_SPRITE_P_H = component.createFileSymbol("GUI_SPRITE_P_H", None)
GUI_SPRITE_P_H.setSourcePath("src/gfx/emwin/inc/GUI_SPRITE_Private.h")
GUI_SPRITE_P_H.setDestPath("gfx/emwin/")
GUI_SPRITE_P_H.setProjectPath(projectPath + "/")
GUI_SPRITE_P_H.setOutputName("gui_sprite_private.h")
GUI_SPRITE_P_H.setType("HEADER")

GUI_TYPE_H = component.createFileSymbol("GUI_TYPE_H", None)
GUI_TYPE_H.setSourcePath("src/gfx/emwin/inc/GUI_Type.h")
GUI_TYPE_H.setDestPath("gfx/emwin/")
GUI_TYPE_H.setProjectPath(projectPath + "/")
GUI_TYPE_H.setOutputName("gui_type.h")
GUI_TYPE_H.setType("HEADER")

GUI_VERSION_H = component.createFileSymbol("GUI_VERSION_H", None)
GUI_VERSION_H.setSourcePath("src/gfx/emwin/inc/GUI_VERSION.h")
GUI_VERSION_H.setDestPath("gfx/emwin/")
GUI_VERSION_H.setProjectPath(projectPath + "/")
GUI_VERSION_H.setOutputName("gui_version.h")
GUI_VERSION_H.setType("HEADER")

GUI_VNC_H = component.createFileSymbol("GUI_VNC_H", None)
GUI_VNC_H.setSourcePath("src/gfx/emwin/inc/GUI_VNC.h")
GUI_VNC_H.setDestPath("gfx/emwin/")
GUI_VNC_H.setProjectPath(projectPath + "/")
GUI_VNC_H.setOutputName("gui_vnc.h")
GUI_VNC_H.setType("HEADER")

GUIDRV_DCACHE_H = component.createFileSymbol("GUIDRV_DCACHE_H", None)
GUIDRV_DCACHE_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_DCACHE.h")
GUIDRV_DCACHE_H.setDestPath("gfx/emwin/")
GUIDRV_DCACHE_H.setProjectPath(projectPath + "/")
GUIDRV_DCACHE_H.setOutputName("guidrv_dcache.h")
GUIDRV_DCACHE_H.setType("HEADER")

GUIDRV_DCACHE_P_H = component.createFileSymbol("GUIDRV_DCACHE_P_H", None)
GUIDRV_DCACHE_P_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_DCACHE.h")
GUIDRV_DCACHE_P_H.setDestPath("gfx/emwin/")
GUIDRV_DCACHE_P_H.setProjectPath(projectPath + "/")
GUIDRV_DCACHE_P_H.setOutputName("guidrv_dcache_private.h")
GUIDRV_DCACHE_P_H.setType("HEADER")

GUIDRV_DIST_H = component.createFileSymbol("GUIDRV_DIST_H", None)
GUIDRV_DIST_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_DIST.h")
GUIDRV_DIST_H.setDestPath("gfx/emwin/")
GUIDRV_DIST_H.setProjectPath(projectPath + "/")
GUIDRV_DIST_H.setOutputName("guidrv_dist.h")
GUIDRV_DIST_H.setType("HEADER")

GUIDRV_FLEXCOLOR_H = component.createFileSymbol("GUIDRV_FLEXCOLOR_H", None)
GUIDRV_FLEXCOLOR_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_FLEXCOLOR.h")
GUIDRV_FLEXCOLOR_H.setDestPath("gfx/emwin/")
GUIDRV_FLEXCOLOR_H.setProjectPath(projectPath + "/")
GUIDRV_FLEXCOLOR_H.setOutputName("guidrv_flexcolor.h")
GUIDRV_FLEXCOLOR_H.setType("HEADER")

GUIDRV_LIN_H = component.createFileSymbol("GUIDRV_LIN_H", None)
GUIDRV_LIN_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_LIN.h")
GUIDRV_LIN_H.setDestPath("gfx/emwin/")
GUIDRV_LIN_H.setProjectPath(projectPath + "/")
GUIDRV_LIN_H.setOutputName("guidrv_lin.h")
GUIDRV_LIN_H.setType("HEADER")

GUIDRV_LIN_OPT_8_H = component.createFileSymbol("GUIDRV_LIN_OPT_8_H", None)
GUIDRV_LIN_OPT_8_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_LIN_OPT_8.h")
GUIDRV_LIN_OPT_8_H.setDestPath("gfx/emwin/")
GUIDRV_LIN_OPT_8_H.setProjectPath(projectPath + "/")
GUIDRV_LIN_OPT_8_H.setOutputName("guidrv_lin_opt_8.h")
GUIDRV_LIN_OPT_8_H.setType("HEADER")

GUIDRV_LIN_OPT_16_H = component.createFileSymbol("GUIDRV_LIN_OPT_16_H", None)
GUIDRV_LIN_OPT_16_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_LIN_OPT_16.h")
GUIDRV_LIN_OPT_16_H.setDestPath("gfx/emwin/")
GUIDRV_LIN_OPT_16_H.setProjectPath(projectPath + "/")
GUIDRV_LIN_OPT_16_H.setOutputName("guidrv_lin_opt_16.h")
GUIDRV_LIN_OPT_16_H.setType("HEADER")

GUIDRV_LIN_OPT_24_H = component.createFileSymbol("GUIDRV_LIN_OPT_24_H", None)
GUIDRV_LIN_OPT_24_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_LIN_OPT_24.h")
GUIDRV_LIN_OPT_24_H.setDestPath("gfx/emwin/")
GUIDRV_LIN_OPT_24_H.setProjectPath(projectPath + "/")
GUIDRV_LIN_OPT_24_H.setOutputName("guidrv_lin_opt_24.h")
GUIDRV_LIN_OPT_24_H.setType("HEADER")

GUIDRV_LIN_OPT_32_H = component.createFileSymbol("GUIDRV_LIN_OPT_32_H", None)
GUIDRV_LIN_OPT_32_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_LIN_OPT_32.h")
GUIDRV_LIN_OPT_32_H.setDestPath("gfx/emwin/")
GUIDRV_LIN_OPT_32_H.setProjectPath(projectPath + "/")
GUIDRV_LIN_OPT_32_H.setOutputName("guidrv_lin_opt_32.h")
GUIDRV_LIN_OPT_32_H.setType("HEADER")

GUIDRV_LIN_P = component.createFileSymbol("GUIDRV_LIN_P_H", None)
GUIDRV_LIN_P.setSourcePath("src/gfx/emwin/inc/GUIDRV_Lin_Private.h")
GUIDRV_LIN_P.setDestPath("gfx/emwin/")
GUIDRV_LIN_P.setProjectPath(projectPath + "/")
GUIDRV_LIN_P.setOutputName("guidrv_lin_private.h")
GUIDRV_LIN_P.setType("HEADER")

GUIDRV_LIN_NOOPT_1_8 = component.createFileSymbol("GUIDRV_LIN_NOOPT_1_8_H", None)
GUIDRV_LIN_NOOPT_1_8.setSourcePath("src/gfx/emwin/inc/GUIDRV_NoOpt_1_8.h")
GUIDRV_LIN_NOOPT_1_8.setDestPath("gfx/emwin/")
GUIDRV_LIN_NOOPT_1_8.setProjectPath(projectPath + "/")
GUIDRV_LIN_NOOPT_1_8.setOutputName("guidrv_lin_noopt_1_8.h")
GUIDRV_LIN_NOOPT_1_8.setType("HEADER")

GUIDRV_S1D13517_H = component.createFileSymbol("GUIDRV_S1D13517_H", None)
GUIDRV_S1D13517_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_S1D13517.h")
GUIDRV_S1D13517_H.setDestPath("gfx/emwin/")
GUIDRV_S1D13517_H.setProjectPath(projectPath + "/")
GUIDRV_S1D13517_H.setOutputName("guidrv_s1d13517.h")
GUIDRV_S1D13517_H.setType("HEADER")

GUIDRV_S1D13517_P_H = component.createFileSymbol("GUIDRV_S1D13517_PRIVATE_P_H", None)
GUIDRV_S1D13517_P_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_S1D13517_Private.h")
GUIDRV_S1D13517_P_H.setDestPath("gfx/emwin/")
GUIDRV_S1D13517_P_H.setProjectPath(projectPath + "/")
GUIDRV_S1D13517_P_H.setOutputName("guidrv_s1d13517_private.h")
GUIDRV_S1D13517_P_H.setType("HEADER")

GUIDRV_Template_H = component.createFileSymbol("GUIDRV_TEMPLATE_H", None)
GUIDRV_Template_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_Template.h")
GUIDRV_Template_H.setDestPath("gfx/emwin/")
GUIDRV_Template_H.setProjectPath(projectPath + "/")
GUIDRV_Template_H.setOutputName("guidrv_template.h")
GUIDRV_Template_H.setType("HEADER")

GUIDRV_TemplateI_H = component.createFileSymbol("GUIDRV_TEMPLATEI_H", None)
GUIDRV_TemplateI_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_TemplateI.h")
GUIDRV_TemplateI_H.setDestPath("gfx/emwin/")
GUIDRV_TemplateI_H.setProjectPath(projectPath + "/")
GUIDRV_TemplateI_H.setOutputName("guidrv_templatei.h")
GUIDRV_TemplateI_H.setType("HEADER")

GUIDRV_TemplateI_P_H = component.createFileSymbol("GUIDRV_TemplateI_P_H", None)
GUIDRV_TemplateI_P_H.setSourcePath("src/gfx/emwin/inc/GUIDRV_TemplateI_Private.h")
GUIDRV_TemplateI_P_H.setDestPath("gfx/emwin/")
GUIDRV_TemplateI_P_H.setProjectPath(projectPath + "/")
GUIDRV_TemplateI_P_H.setOutputName("guidrv_templatei_private.h")
GUIDRV_TemplateI_P_H.setType("HEADER")

HEADER_H = component.createFileSymbol("HEADER_H", None)
HEADER_H.setSourcePath("src/gfx/emwin/inc/HEADER.h")
HEADER_H.setDestPath("gfx/emwin/")
HEADER_H.setProjectPath(projectPath + "/")
HEADER_H.setOutputName("header.h")
HEADER_H.setType("HEADER")

HEADER_P_H = component.createFileSymbol("HEADER_PRIVATE_H", None)
HEADER_P_H.setSourcePath("src/gfx/emwin/inc/HEADER_Private.h")
HEADER_P_H.setDestPath("gfx/emwin/")
HEADER_P_H.setProjectPath(projectPath + "/")
HEADER_P_H.setOutputName("header_private.h")
HEADER_P_H.setType("HEADER")

ICONVIEW_H = component.createFileSymbol("ICONVIEW_H", None)
ICONVIEW_H.setSourcePath("src/gfx/emwin/inc/ICONVIEW.h")
ICONVIEW_H.setDestPath("gfx/emwin/")
ICONVIEW_H.setProjectPath(projectPath + "/")
ICONVIEW_H.setOutputName("iconview.h")
ICONVIEW_H.setType("HEADER")

ICONVIEW_P_H = component.createFileSymbol("ICONVIEW_P_H", None)
ICONVIEW_P_H.setSourcePath("src/gfx/emwin/inc/ICONVIEW_Private.h")
ICONVIEW_P_H.setDestPath("gfx/emwin/")
ICONVIEW_P_H.setProjectPath(projectPath + "/")
ICONVIEW_P_H.setOutputName("iconview_private.h")
ICONVIEW_P_H.setType("HEADER")

IMAGE_H = component.createFileSymbol("IMAGE_H", None)
IMAGE_H.setSourcePath("src/gfx/emwin/inc/IMAGE.h")
IMAGE_H.setDestPath("gfx/emwin/")
IMAGE_H.setProjectPath(projectPath + "/")
IMAGE_H.setOutputName("image.h")
IMAGE_H.setType("HEADER")

IMAGE_P_H = component.createFileSymbol("IMAGE_P_H", None)
IMAGE_P_H.setSourcePath("src/gfx/emwin/inc/IMAGE_Private.h")
IMAGE_P_H.setDestPath("gfx/emwin/")
IMAGE_P_H.setProjectPath(projectPath + "/")
IMAGE_P_H.setOutputName("image_private.h")
IMAGE_P_H.setType("HEADER")

IP_FS_H = component.createFileSymbol("IP_FS_H", None)
IP_FS_H.setSourcePath("src/gfx/emwin/inc/IP_FS.h")
IP_FS_H.setDestPath("gfx/emwin/")
IP_FS_H.setProjectPath(projectPath + "/")
IP_FS_H.setOutputName("ip_fs.h")
IP_FS_H.setType("HEADER")

KNOB_H = component.createFileSymbol("KNOB_H", None)
KNOB_H.setSourcePath("src/gfx/emwin/inc/KNOB.h")
KNOB_H.setDestPath("gfx/emwin/")
KNOB_H.setProjectPath(projectPath + "/")
KNOB_H.setOutputName("knob.h")
KNOB_H.setType("HEADER")

KNOB_P_H = component.createFileSymbol("KNOB_P_H", None)
KNOB_P_H.setSourcePath("src/gfx/emwin/inc/KNOB_Private.h")
KNOB_P_H.setDestPath("gfx/emwin/")
KNOB_P_H.setProjectPath(projectPath + "/")
KNOB_P_H.setOutputName("knob_private.h")
KNOB_P_H.setType("HEADER")

LCD_H = component.createFileSymbol("LCD_H", None)
LCD_H.setSourcePath("src/gfx/emwin/inc/LCD.h")
LCD_H.setDestPath("gfx/emwin/")
LCD_H.setProjectPath(projectPath + "/")
LCD_H.setOutputName("lcd.h")
LCD_H.setType("HEADER")

LCD_PRIVATE_H = component.createFileSymbol("LCD_PRIVATE_H", None)
LCD_PRIVATE_H.setSourcePath("src/gfx/emwin/inc/LCD_Private.h")
LCD_PRIVATE_H.setDestPath("gfx/emwin/")
LCD_PRIVATE_H.setProjectPath(projectPath + "/")
LCD_PRIVATE_H.setOutputName("lcd_private.h")
LCD_PRIVATE_H.setType("HEADER")

LCD_PROTECTED_H = component.createFileSymbol("LCD_PROTECTED_H", None)
LCD_PROTECTED_H.setSourcePath("src/gfx/emwin/inc/LCD_Protected.h")
LCD_PROTECTED_H.setDestPath("gfx/emwin/")
LCD_PROTECTED_H.setProjectPath(projectPath + "/")
LCD_PROTECTED_H.setOutputName("lcd_protected.h")
LCD_PROTECTED_H.setType("HEADER")

LCD_SIM_H = component.createFileSymbol("LCD_SIM_H", None)
LCD_SIM_H.setSourcePath("src/gfx/emwin/inc/LCD_SIM.h")
LCD_SIM_H.setDestPath("gfx/emwin/")
LCD_SIM_H.setProjectPath(projectPath + "/")
LCD_SIM_H.setOutputName("lcd_sim.h")
LCD_SIM_H.setType("HEADER")

LISTBOX_H = component.createFileSymbol("LISTBOX_H", None)
LISTBOX_H.setSourcePath("src/gfx/emwin/inc/LISTBOX.h")
LISTBOX_H.setDestPath("gfx/emwin/")
LISTBOX_H.setProjectPath(projectPath + "/")
LISTBOX_H.setOutputName("listbox.h")
LISTBOX_H.setType("HEADER")

LISTBOX_P_H = component.createFileSymbol("LISTBOX_P_H", None)
LISTBOX_P_H.setSourcePath("src/gfx/emwin/inc/LISTBOX_Private.h")
LISTBOX_P_H.setDestPath("gfx/emwin/")
LISTBOX_P_H.setProjectPath(projectPath + "/")
LISTBOX_P_H.setOutputName("listbox_private.h")
LISTBOX_P_H.setType("HEADER")

LISTVIEW_H = component.createFileSymbol("LISTVIEW_H", None)
LISTVIEW_H.setSourcePath("src/gfx/emwin/inc/LISTVIEW.h")
LISTVIEW_H.setDestPath("gfx/emwin/")
LISTVIEW_H.setProjectPath(projectPath + "/")
LISTVIEW_H.setOutputName("listview.h")
LISTVIEW_H.setType("HEADER")

LISTVIEW_P_H = component.createFileSymbol("LISTVIEW_P_H", None)
LISTVIEW_P_H.setSourcePath("src/gfx/emwin/inc/LISTBOX_Private.h")
LISTVIEW_P_H.setDestPath("gfx/emwin/")
LISTVIEW_P_H.setProjectPath(projectPath + "/")
LISTVIEW_P_H.setOutputName("listview_private.h")
LISTVIEW_P_H.setType("HEADER")

LISTWHEEL_H = component.createFileSymbol("LISTWHEEL_H", None)
LISTWHEEL_H.setSourcePath("src/gfx/emwin/inc/LISTWHEEL.h")
LISTWHEEL_H.setDestPath("gfx/emwin/")
LISTWHEEL_H.setProjectPath(projectPath + "/")
LISTWHEEL_H.setOutputName("listwheel.h")
LISTWHEEL_H.setType("HEADER")

LISTWHEEL_P_H = component.createFileSymbol("LISTWHEEL_P_H", None)
LISTWHEEL_P_H.setSourcePath("src/gfx/emwin/inc/LISTBOX_Private.h")
LISTWHEEL_P_H.setDestPath("gfx/emwin/")
LISTWHEEL_P_H.setProjectPath(projectPath + "/")
LISTWHEEL_P_H.setOutputName("listwheel_private.h")
LISTWHEEL_P_H.setType("HEADER")

MENU_H = component.createFileSymbol("MENU_H", None)
MENU_H.setSourcePath("src/gfx/emwin/inc/MENU.h")
MENU_H.setDestPath("gfx/emwin/")
MENU_H.setProjectPath(projectPath + "/")
MENU_H.setOutputName("menu.h")
MENU_H.setType("HEADER")

MENU_P_H = component.createFileSymbol("MENU_P_H", None)
MENU_P_H.setSourcePath("src/gfx/emwin/inc/MENU_Private.h")
MENU_P_H.setDestPath("gfx/emwin/")
MENU_P_H.setProjectPath(projectPath + "/")
MENU_P_H.setOutputName("menu_private.h")
MENU_P_H.setType("HEADER")

MESSAGEBOX_H = component.createFileSymbol("MESSAGEBOX_H", None)
MESSAGEBOX_H.setSourcePath("src/gfx/emwin/inc/MESSAGEBOX.h")
MESSAGEBOX_H.setDestPath("gfx/emwin/")
MESSAGEBOX_H.setProjectPath(projectPath + "/")
MESSAGEBOX_H.setOutputName("messagebox.h")
MESSAGEBOX_H.setType("HEADER")

MULTIEDIT_H = component.createFileSymbol("MULTIEDIT_H", None)
MULTIEDIT_H.setSourcePath("src/gfx/emwin/inc/MULTIEDIT.h")
MULTIEDIT_H.setDestPath("gfx/emwin/")
MULTIEDIT_H.setProjectPath(projectPath + "/")
MULTIEDIT_H.setOutputName("multiedit.h")
MULTIEDIT_H.setType("HEADER")

MULTIPAGE_H = component.createFileSymbol("MULTIPAGE_H", None)
MULTIPAGE_H.setSourcePath("src/gfx/emwin/inc/MULTIPAGE.h")
MULTIPAGE_H.setDestPath("gfx/emwin/")
MULTIPAGE_H.setProjectPath(projectPath + "/")
MULTIPAGE_H.setOutputName("multipage.h")
MULTIPAGE_H.setType("HEADER")

MULTIPAGE_P_H = component.createFileSymbol("MULTIPAGE_P_H", None)
MULTIPAGE_P_H.setSourcePath("src/gfx/emwin/inc/MULTIPAGE_Private.h")
MULTIPAGE_P_H.setDestPath("gfx/emwin/")
MULTIPAGE_P_H.setProjectPath(projectPath + "/")
MULTIPAGE_P_H.setOutputName("multipage_private.h")
MULTIPAGE_P_H.setType("HEADER")

PROGBAR_H = component.createFileSymbol("PROGBAR_H", None)
PROGBAR_H.setSourcePath("src/gfx/emwin/inc/PROGBAR.h")
PROGBAR_H.setDestPath("gfx/emwin/")
PROGBAR_H.setProjectPath(projectPath + "/")
PROGBAR_H.setOutputName("progbar.h")
PROGBAR_H.setType("HEADER")

PROGBAR_P_H = component.createFileSymbol("PROGBAR_P_H", None)
PROGBAR_P_H.setSourcePath("src/gfx/emwin/inc/PROGBAR_Private.h")
PROGBAR_P_H.setDestPath("gfx/emwin/")
PROGBAR_P_H.setProjectPath(projectPath + "/")
PROGBAR_P_H.setOutputName("progbar_private.h")
PROGBAR_P_H.setType("HEADER")

RADIO_H = component.createFileSymbol("RADIO_H", None)
RADIO_H.setSourcePath("src/gfx/emwin/inc/RADIO.h")
RADIO_H.setDestPath("gfx/emwin/")
RADIO_H.setProjectPath(projectPath + "/")
RADIO_H.setOutputName("radio.h")
RADIO_H.setType("HEADER")

RADIO_P_H = component.createFileSymbol("RADIO_P_H", None)
RADIO_P_H.setSourcePath("src/gfx/emwin/inc/RADIO_Private.h")
RADIO_P_H.setDestPath("gfx/emwin/")
RADIO_P_H.setProjectPath(projectPath + "/")
RADIO_P_H.setOutputName("radio_private.h")
RADIO_P_H.setType("HEADER")

SCROLLBAR_H = component.createFileSymbol("SCROLLBAR_H", None)
SCROLLBAR_H.setSourcePath("src/gfx/emwin/inc/SCROLLBAR.h")
SCROLLBAR_H.setDestPath("gfx/emwin/")
SCROLLBAR_H.setProjectPath(projectPath + "/")
SCROLLBAR_H.setOutputName("scrollbar.h")
SCROLLBAR_H.setType("HEADER")

SCROLLBAR_P_H = component.createFileSymbol("SCROLLBAR_P_H", None)
SCROLLBAR_P_H.setSourcePath("src/gfx/emwin/inc/SCROLLBAR_Private.h")
SCROLLBAR_P_H.setDestPath("gfx/emwin/")
SCROLLBAR_P_H.setProjectPath(projectPath + "/")
SCROLLBAR_P_H.setOutputName("scrollbar_private.h")
SCROLLBAR_P_H.setType("HEADER")

SEGGER_H = component.createFileSymbol("SEGGER_H", None)
SEGGER_H.setSourcePath("src/gfx/emwin/inc/SEGGER.h")
SEGGER_H.setDestPath("gfx/emwin/")
SEGGER_H.setProjectPath(projectPath + "/")
SEGGER_H.setOutputName("segger.h")
SEGGER_H.setType("HEADER")

SLIDER_H = component.createFileSymbol("SLIDER_H", None)
SLIDER_H.setSourcePath("src/gfx/emwin/inc/SLIDER.h")
SLIDER_H.setDestPath("gfx/emwin/")
SLIDER_H.setProjectPath(projectPath + "/")
SLIDER_H.setOutputName("slider.h")
SLIDER_H.setType("HEADER")

SLIDER_P_H = component.createFileSymbol("SLIDER_P_H", None)
SLIDER_P_H.setSourcePath("src/gfx/emwin/inc/SLIDER_Private.h")
SLIDER_P_H.setDestPath("gfx/emwin/")
SLIDER_P_H.setProjectPath(projectPath + "/")
SLIDER_P_H.setOutputName("slider_private.h")
SLIDER_P_H.setType("HEADER")

SPINBOX_H = component.createFileSymbol("SPINBOX_H", None)
SPINBOX_H.setSourcePath("src/gfx/emwin/inc/SPINBOX.h")
SPINBOX_H.setDestPath("gfx/emwin/")
SPINBOX_H.setProjectPath(projectPath + "/")
SPINBOX_H.setOutputName("spinbox.h")
SPINBOX_H.setType("HEADER")

SPINBOX_P_H = component.createFileSymbol("SPINBOX_P_H", None)
SPINBOX_P_H.setSourcePath("src/gfx/emwin/inc/SPINBOX_Private.h")
SPINBOX_P_H.setDestPath("gfx/emwin/")
SPINBOX_P_H.setProjectPath(projectPath + "/")
SPINBOX_P_H.setOutputName("spinbox_private.h")
SPINBOX_P_H.setType("HEADER")

SWIPELIST_H = component.createFileSymbol("SWIPELIST_H", None)
SWIPELIST_H.setSourcePath("src/gfx/emwin/inc/SWIPELIST.h")
SWIPELIST_H.setDestPath("gfx/emwin/")
SWIPELIST_H.setProjectPath(projectPath + "/")
SWIPELIST_H.setOutputName("swipelist.h")
SWIPELIST_H.setType("HEADER")

SWIPELIST_P_H = component.createFileSymbol("SWIPELIST_P_H", None)
SWIPELIST_P_H.setSourcePath("src/gfx/emwin/inc/SWIPELIST_Private.h")
SWIPELIST_P_H.setDestPath("gfx/emwin/")
SWIPELIST_P_H.setProjectPath(projectPath + "/")
SWIPELIST_P_H.setOutputName("swipelist_private.h")
SWIPELIST_P_H.setType("HEADER")

TEXT_H = component.createFileSymbol("TEXT_H", None)
TEXT_H.setSourcePath("src/gfx/emwin/inc/TEXT.h")
TEXT_H.setDestPath("gfx/emwin/")
TEXT_H.setProjectPath(projectPath + "/")
TEXT_H.setOutputName("text.h")
TEXT_H.setType("HEADER")

TEXT_P_H = component.createFileSymbol("TEXT_P_H", None)
TEXT_P_H.setSourcePath("src/gfx/emwin/inc/TEXT_Private.h")
TEXT_P_H.setDestPath("gfx/emwin/")
TEXT_P_H.setProjectPath(projectPath + "/")
TEXT_P_H.setOutputName("text_private.h")
TEXT_P_H.setType("HEADER")

TREEVIEW_H = component.createFileSymbol("TREEVIEW_H", None)
TREEVIEW_H.setSourcePath("src/gfx/emwin/inc/TREEVIEW.h")
TREEVIEW_H.setDestPath("gfx/emwin/")
TREEVIEW_H.setProjectPath(projectPath + "/")
TREEVIEW_H.setOutputName("treeview.h")
TREEVIEW_H.setType("HEADER")

TREEVIEW_P_H = component.createFileSymbol("TREEVIEW_P_H", None)
TREEVIEW_P_H.setSourcePath("src/gfx/emwin/inc/TREEVIEW_Private.h")
TREEVIEW_P_H.setDestPath("gfx/emwin/")
TREEVIEW_P_H.setProjectPath(projectPath + "/")
TREEVIEW_P_H.setOutputName("treeview_private.h")
TREEVIEW_P_H.setType("HEADER")

WIDGET_H = component.createFileSymbol("WIDGET_H", None)
WIDGET_H.setSourcePath("src/gfx/emwin/inc/WIDGET.h")
WIDGET_H.setDestPath("gfx/emwin/")
WIDGET_H.setProjectPath(projectPath + "/")
WIDGET_H.setOutputName("widget.h")
WIDGET_H.setType("HEADER")

WINDOW_P_H = component.createFileSymbol("WINDOW_P_H", None)
WINDOW_P_H.setSourcePath("src/gfx/emwin/inc/WINDOW_Private.h")
WINDOW_P_H.setDestPath("gfx/emwin/")
WINDOW_P_H.setProjectPath(projectPath + "/")
WINDOW_P_H.setOutputName("window_private.h")
WINDOW_P_H.setType("HEADER")

WM_H = component.createFileSymbol("WM_H", None)
WM_H.setSourcePath("src/gfx/emwin/inc/WM.h")
WM_H.setDestPath("gfx/emwin/")
WM_H.setProjectPath(projectPath + "/")
WM_H.setOutputName("wm.h")
WM_H.setType("HEADER")

WM_GUI_H = component.createFileSymbol("WM_GUI_H", None)
WM_GUI_H.setSourcePath("src/gfx/emwin/inc/WM_GUI.h")
WM_GUI_H.setDestPath("gfx/emwin/")
WM_GUI_H.setProjectPath(projectPath + "/")
WM_GUI_H.setOutputName("wm_gui.h")
WM_GUI_H.setType("HEADER")

WM_INTERN = component.createFileSymbol("WM_INTERN", None)
WM_INTERN.setSourcePath("src/gfx/emwin/inc/WM_INTERN.h")
WM_INTERN.setDestPath("gfx/emwin/")
WM_INTERN.setProjectPath(projectPath + "/")
WM_INTERN.setOutputName("wm_intern.h")
WM_INTERN.setType("HEADER")

